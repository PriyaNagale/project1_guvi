# -*- coding: utf-8 -*-
"""Project1_Chennai_Priyanka_Nagale.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jdtW-9Mlizo9cpcb8IZRg60NSeHy1B_V
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df1 = pd.read_csv("/content/train-chennai-sale.csv")
df1.head()

df2 = df1.drop('PRT_ID', axis=1)

df2.head()

df2.shape

df2.columns

df2.info()

df2.isnull().sum()

df3 = df2.copy()

df3 = df2.dropna()

df3.isnull().sum()

df3['BUILDTYPE']

df3['DATE_SALE'] = pd.to_datetime(df3['DATE_SALE'])
df3['DATE_BUILD'] = pd.to_datetime(df3['DATE_BUILD'])

df3.info()

df3['AGE_DAYS'] = df3['DATE_SALE'] - df3['DATE_BUILD']

df3['AGE_DAYS'] = df3['DATE_SALE'] - df3['DATE_BUILD']

df3.head(10)

def age_extract(x):
  x=str(x)
  l = x.split()
  return l[0]

df3['AGE_DAYS'] = df3['AGE_DAYS'].apply(age_extract)
df3['AGE_DAYS'] = df3['AGE_DAYS'].astype('int64')

df3['AGE_YEARS'] = (df3['AGE_DAYS'] * 0.0027379).astype('int64')

df3.head()

df4 = df3.copy()

df4 = df4.drop(['DATE_SALE','DATE_BUILD','AGE_DAYS'], axis=1)

df4.head()

df4.shape

df4.reset_index(inplace=True)

df5 = df4.copy()

df4['AREA'].value_counts()

for i in range(0,len(df4['AREA'])):
  if df4['AREA'][i] == 'chrompt' or df4['AREA'][i] == 'chrompt' or df4['AREA'][i]  == 'chrompt':
    df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'chrompt')

  elif df4['AREA'][i] == 'Karapakam':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'Karapakam')

  elif df4['AREA'][i] == 'KKNagar':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'KKNagar')

  elif df4['AREA'][i] == 'Velchery':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'Velchery')

  elif df4['AREA'][i] == 'Ann Nagar':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'Ann Nagar')  

  elif df4['AREA'][i] == 'Adyr':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'Adyr')

  elif df4['AREA'][i] == 'TNagar':
      df5['AREA'][i] = df5['AREA'][i].replace(df4['AREA'][i],'TNagar')

df5['AREA'].value_counts()

df4['SALE_COND'].value_counts()

for i in range(0,len(df4['SALE_COND'])):
  if df4['SALE_COND'][i] == 'Adj Land':
    df5['SALE_COND'][i] = df5['SALE_COND'][i].replace(df4['SALE_COND'][i], 'AdjLand')

  elif df4['SALE_COND'][i] == 'Ab Noramal':
    df5['SALE_COND'][i] = df5['SALE_COND'][i].replace(df4['SALE_COND'][i], 'Abnormal')

  elif df4['SALE_COND'][i] == 'Partial' or df4['SALE_COND'][i] == 'Partial':
    df5['SALE_COND'][i] = df5['SALE_COND'][i].replace(df4['SALE_COND'][i], 'Partial')

df5['SALE_COND'].value_counts()

df4['PARK_FACIL'].value_counts()

for i in range(0,len(df4['PARK_FACIL'])):
  if df4['PARK_FACIL'][i] == 'Noo':
    df5['PARK_FACIL'][i] = df5['PARK_FACIL'][i].replace(df4['PARK_FACIL'][i], 'No')

df5['PARK_FACIL'].value_counts()

df4['BUILDTYPE'].value_counts()

for i in range(0,len(df4['BUILDTYPE'])):
  if df4['BUILDTYPE'][i] == 'other':
    df5['BUUILDTYPE'][i] = df5['BUILDTYPE'][i].replace(df4['BUILDTYPE'][i], 'others')
  elif df4['BUILDTYPE'][i] == 'comercial':
    df5['BUUILDTYPE'][i] = df5['BUILDTYPE'][i].replace(df4['BUILDTYPE'][i], 'commercial')

df5 ['BUILDTYPE'].value_counts()

df4['UTILITY_AVAIL'].value_counts()

for i in range(0,len(df4['UTILITY_AVAIL'])):
  if df4['UTILITY_AVAIL'][i] == 'All Pub':
    df5['UTILITY_AVAIL'][i] == df5['UTILITY_AVAIL'][i].replace(df4['UTILITY_AVAIL'][i], 'AllPub')

df5['UTILITY_AVAIL'].value_counts()

df4['STREET'].value_counts()

for i in range(0,len(df4['STREET'])):
  if df4['STREET'][i] =='Pavd':
    df5['STREET'][i] = df5['STREET'][i].replace(df4['STREET'][i], 'Paved')
  if df4['STREET'][i] =='NoAccess':
    df5['STREET'][i] = df5['STREET'][i].replace(df4['STREET'][i], 'No Access')

df5["STREET"].value_counts()

df4['MZZONE'].value_counts()

df5.head(10)

df5.drop('index', axis=1, inplace=True  )

df5['QS_BATHROOM'].unique()

df5['QS_ROOMS'].unique()

df5['QS_OVERALL'].unique()

df5['REG_FEE'].unique()

df5['COMMIS'].unique()

df5['SALES_PRICE'].unique()

df5.describe().T

df6 = df5.copy()

df6['price_per_sqft'] = df5['SALES_PRICE']/df5['INT_SQFT']
df6.head()

df6.info()

df6['N_BEDROOM'] = df6['N_BEDROOM'].astype('int64')
df6['N_BATHROOM'] = df6['N_BATHROOM'].astype('int64')

df6['price_per_sqft'].describe().T

def remove(df_in):
  df_final = pd.DataFrame()
  for i,j in df_in.groupby('AREA'):
    M = j['price_per_sqft'].mean()
    STD = np.std(j['price_per_sqft'])
    cleaned = j[(j['price_per_sqft'] > (m-3*STD)) & (j['price_per_sqft'] <= (m+3*STD))]
    df_final = pd.concat([df_final,cleaned],ignore_index=True)

  return df_final